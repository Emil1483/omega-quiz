name: CI

on:
    push:

jobs:
    setup:
        runs-on: ubuntu-latest
        outputs:
            docker_tag: ${{ steps.docker_tag.outputs.tag }}

        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Dump GitHub context
              env:
                  GITHUB_CONTEXT: ${{ toJson(github) }}
              run: echo "$GITHUB_CONTEXT"

            - name: Set Docker tag
              id: docker_tag
              run: |
                  if [[ "${{ github.ref_type }}" == "tag" ]]; then
                    echo "tag=${{ github.ref_name }}" >> $GITHUB_OUTPUT
                  else
                    echo "tag=${{ github.sha }}" >> $GITHUB_OUTPUT
                  fi

    build:
        needs:
            - setup

        runs-on: ubuntu-latest

        strategy:
            matrix:
                image:
                    - context: "."
                      tag: superemil64/omega-quiz

        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ vars.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Build Image
              uses: docker/build-push-action@v6
              with:
                  push: true
                  context: ${{ matrix.image.context }}
                  platforms: linux/amd64
                  tags: "${{ matrix.image.tag }}:${{ needs.setup.outputs.docker_tag }}"
                  cache-from: type=registry,ref=${{ matrix.image.tag }}:buildcache
                  cache-to: type=registry,ref=${{ matrix.image.tag }}:buildcache,mode=max

    deploy:
        runs-on: ubuntu-latest

        needs:
            - build
            - setup

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Create ansible configuration directory
              run: sudo mkdir -p /etc/ansible

            - name: Create Ansible configuration file
              run: |
                  sudo tee /etc/ansible/ansible.cfg <<EOF
                  [defaults]
                  host_key_checking = False
                  EOF

            - name: Setting ansible vault password
              run: echo '${{ secrets.ANSIBLE_VAULT_PASS }}' | sudo tee /etc/ansible_pass
              shell: bash

            - name: Install dependencies
              run: |
                  sudo apt-get update
                  sudo apt-get install -y software-properties-common
                  sudo add-apt-repository --yes --update ppa:ansible/ansible
                  sudo apt-get install -y ansible
                  sudo pip install docker

            - name: Deploy ansible playbook for tag
              shell: bash
              working-directory: deploy
              if: github.ref_type == 'tag'
              run: |
                  ansible-playbook -i inventory.yml --vault-id default@/etc/ansible_pass deploy.yml --diff --extra-vars '{"tag": "${{ needs.setup.outputs.docker_tag }}" }'
